{"version":3,"sources":["PersonBalance.tsx","TotalPrize.tsx","App.tsx"],"names":["PersonBalance","name","id","amount","db","getDatabase","reference","ref","updateUserAmount","set","View","style","styles","container","Text","text","amountContainer","TouchableOpacity","button","onPress","StyleSheet","create","marginVertical","paddingHorizontal","paddingVertical","flexDirection","justifyContent","alignItems","fontSize","marginHorizontal","TotalPrize","App","useState","users","setUsers","useEffect","starCountRef","onValue","snapshot","usersRaw","val","adaptedUsers","Object","keys","map","key","totalAmount","reduce","previousValue","currentValue","FlatList","contentContainerStyle","data","renderItem","item","keyExtractor","ListHeaderComponent","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","flex","backgroundColor"],"mappings":"kNAUaA,EAAgB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,OAClCC,EAAKC,cACLC,EAAYC,YAAIH,EAAI,SAAWF,GAE/BM,EAAmB,SAACL,GACxBM,YAAIH,EAAW,CACbL,OACAE,YAIJ,OACE,eAACO,EAAA,EAAD,CAAMC,MAAOC,EAAOC,UAApB,UACE,cAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOG,KAApB,SAA2Bd,IAC3B,eAACS,EAAA,EAAD,CAAMC,MAAOC,EAAOI,gBAApB,UACE,cAACC,EAAA,EAAD,CACEN,MAAOC,EAAOM,OACdC,QAAS,kBAAMX,EAAiBL,EAAS,IAF3C,SAIE,cAACW,EAAA,EAAD,CAAMH,MAAOC,EAAOG,KAApB,iBAEF,cAACD,EAAA,EAAD,CAAMH,MAAO,CAACC,EAAOG,KAAMH,EAAOT,QAAlC,SAA4CA,IAC5C,cAACc,EAAA,EAAD,CACEN,MAAOC,EAAOM,OACdC,QAAS,kBAAMX,EAAiBL,EAAS,IAF3C,SAIE,cAACW,EAAA,EAAD,CAAMH,MAAOC,EAAOG,KAApB,wBAOJH,EAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTS,eAAgB,GAChBC,kBAAmB,GACnBC,gBAAiB,GACjBC,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZC,SAAU,IAEZZ,gBAAiB,CACfS,cAAe,MACfE,WAAY,UAEdT,OAAQ,CACNM,gBAAiB,GACjBD,kBAAmB,IAErBR,KAAM,CACJa,SAAU,IAEZzB,OAAQ,CACN0B,iBAAkB,M,eCzDTC,EAAa,SAAC,GAAuB,IAArB3B,EAAoB,EAApBA,OAC3B,OACE,cAACO,EAAA,EAAD,CAAMC,MAAOC,EAAOC,UAApB,SACE,eAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOG,KAApB,wBALgB,EAKsBZ,EAAtC,gBAKAS,EAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTU,kBAAmB,GACnBC,gBAAiB,GACjBC,cAAe,MACfC,eAAgB,UAElBX,KAAM,CACJa,SAAU,M,ikBCNC,SAASG,IACtB,MAA0BC,mBAMxB,IANF,WAAOC,EAAP,KAAcC,EAAd,KAQAC,qBAAU,WACR,IAAM/B,EAAKC,cAEL+B,EAAe7B,YAAIH,EAAI,UAC7BiC,YAAQD,GAAc,SAACE,GACrB,IAAMC,EAAWD,EAASE,MACpBC,EAAeC,OAAOC,KAAKJ,GAAUK,KAAI,SAACC,GAAD,cAC1CN,EAASM,IADiC,IAE7C3C,GAAI2C,OAENX,EAASO,QAEV,IAEH,IAAMK,EAAcb,EACjBW,KAAI,qBAAGzC,UACP4C,QAAO,SAACC,EAAeC,GAAhB,OAAiCD,EAAgBC,IAAc,GAEzE,OACE,cAACC,EAAA,EAAD,CACEC,sBAAuBvC,EAAOC,UAC9BuC,KAAMnB,EACNoB,WAAY,gBAAGC,EAAH,EAAGA,KAAH,OACV,cAAC,EAAD,CAAerD,KAAMqD,EAAKrD,KAAMC,GAAIoD,EAAKpD,GAAIC,OAAQmD,EAAKnD,UAE5DoD,aAAc,SAACD,GAAD,OAAUA,EAAKpD,IAC7BsD,oBAAqB,cAAC,EAAD,CAAYrD,OAAQ2C,MArC/CW,YARuB,CACrBC,OAAQ,0CACRC,WAAY,2BACZC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,eACnBC,MAAO,8CA4CT,IAAMnD,EAASQ,IAAWC,OAAO,CAC/BR,UAAW,CACTmD,KAAM,EACNC,gBAAiB,OACjBvC,eAAgB,a","file":"static/js/app.d7cdbee3.chunk.js","sourcesContent":["import { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\nimport { getDatabase, ref, onValue, set, off } from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  name: string;\n  id: string;\n  amount: number;\n}\n\nexport const PersonBalance = ({ name, id, amount }: Props) => {\n  const db = getDatabase();\n  const reference = ref(db, \"users/\" + id);\n\n  const updateUserAmount = (amount: number) => {\n    set(reference, {\n      name,\n      amount,\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>{name}</Text>\n      <View style={styles.amountContainer}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => updateUserAmount(amount - 1)}\n        >\n          <Text style={styles.text}>-</Text>\n        </TouchableOpacity>\n        <Text style={[styles.text, styles.amount]}>{amount}</Text>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => updateUserAmount(amount + 1)}\n        >\n          <Text style={styles.text}>+</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 10,\n    paddingHorizontal: 30,\n    paddingVertical: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    fontSize: 20,\n  },\n  amountContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  button: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n  },\n  text: {\n    fontSize: 20,\n  },\n  amount: {\n    marginHorizontal: 20,\n  },\n});\n","import { Text, StyleSheet, View } from \"react-native\";\n\ninterface Props {\n  amount: number;\n}\n\nconst eurosPerSwear = 5;\n\nexport const TotalPrize = ({ amount }: Props) => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Cagnotte : {amount * eurosPerSwear} â‚¬</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 30,\n    paddingVertical: 20,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  text: {\n    fontSize: 20,\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport { FlatList, StyleSheet, Text, View } from \"react-native\";\nimport { PersonBalance } from \"./PersonBalance\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, child, onValue, set, get } from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\nimport { TotalPrize } from \"./TotalPrize\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBrfwcsaO0uj9pRLxjztVkeZOmoNDPa5Hk\",\n  authDomain: \"no-swear.firebaseapp.com\",\n  projectId: \"no-swear\",\n  storageBucket: \"no-swear.appspot.com\",\n  messagingSenderId: \"754158750202\",\n  appId: \"1:754158750202:web:83225ad9e2b1dbf9943c43\",\n};\ninitializeApp(firebaseConfig);\n\nexport default function App() {\n  const [users, setUsers] = useState<\n    {\n      id: string;\n      name: string;\n      amount: number;\n    }[]\n  >([]);\n\n  useEffect(() => {\n    const db = getDatabase();\n\n    const starCountRef = ref(db, \"users/\");\n    onValue(starCountRef, (snapshot) => {\n      const usersRaw = snapshot.val();\n      const adaptedUsers = Object.keys(usersRaw).map((key) => ({\n        ...usersRaw[key],\n        id: key,\n      }));\n      setUsers(adaptedUsers);\n    });\n  }, []);\n\n  const totalAmount = users\n    .map(({ amount }) => amount)\n    .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\n\n  return (\n    <FlatList\n      contentContainerStyle={styles.container}\n      data={users}\n      renderItem={({ item }) => (\n        <PersonBalance name={item.name} id={item.id} amount={item.amount} />\n      )}\n      keyExtractor={(item) => item.id}\n      ListHeaderComponent={<TotalPrize amount={totalAmount} />}\n    ></FlatList>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}